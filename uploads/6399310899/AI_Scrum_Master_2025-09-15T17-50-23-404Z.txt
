 Generación de backlog inicial:

**Product Backlog**

| ID | Título | Priority | Historia de Usuario / Product Owner | Tipo (frontend/backend) | Tarea | Lenguaje de Programación |
|---|---|---|---|---|---|
| B001 | Diseño de interfaz para la calculadora móvil | Alta | Historia de usuario 1 | frontend | Implementar diseño intuitivo y limpio para la interfaz de usuario | CSS, HTML5 |
| B002 | Implementación de componentes visuales para la calculadora | Alta | Historia de usuario 1 | frontend | Crear botones y campos de entrada para los números y operaciones aritméticas | CSS, HTML5 |
| B003 | Desarrollo del código JavaScript para el funcionamiento de la calculadora | Alta | Historia de usuario 1 | backend | Implementar las cuatro operaciones básicas matemáticas | JavaScript |
| B004 | Integración de protección contra inyecciones SQL en la aplicación | Alta | Historia de desarrollador | backend | Asegurar la seguridad de la base de datos mediante medidas de protección contra inyecciones SQL | Node.js, Sequelize |
| B005 | Implementación de cifrado de datos sensibles en la aplicación | Alta | Historia de desarrollador | backend | Cifrar información sensible almacenada o transmitida mediante medidas de seguridad y privacidad requeridas para aplicaciones financieras o comerciales | Node.js, Sequelize |
| B006 | Compatibilidad con dispositivos móviles Android e iOS | Alta | Requisito no funcional | backend/frontend | Diseñar código compatible con plataformas móviles y optimizar la interfaz para diferentes tamaños de pantalla | CSS, HTML5, JavaScript, Node.js |
| B007 | Optimización del rendimiento de la calculadora | Alta | Requisito no funcional | frontend/backend | Implementar optimizaciones para mejorar el rendimiento y evitar retrasos o errores en las operaciones matemáticas | JavaScript, Node.js |

Luego se organizan las tareas en Sprints según la prioridad de cada historia de usuario y el tipo de tarea.