 **FrontendTasks:**

1. Crear una página HTML para la Calculadora (index.html)
   - Contiene contenedores, botones y espacios necesarios para renderizar la interfaz de la calculadora

2. Estilos CSS para la Calculadora (styles.css)
   - Define estilos, colores y fuentes que se usarán en la interfaz

3. Agregar funciones JavaScript para cada botón de operación (app.js)
   - Suma (sumar()): Agregue un evento click a "+" que muestre el teclado numérico y establezca '+' como operador
   - Resta (restar()): Agregue un evento click a "-" que muestre el teclado numérico y establezca '-' como operador
   - Multiplicación (multiplicar()): Agregue un evento click a "*" que muestre el teclado numérico y establezca '*' como operador
   - División (dividir()): Agregue un evento click a "/" que muestre el teclado numérico y establezca '/' como operador

4. Crear una función para mostrar/ocultar el teclado numérico (mostrarTeclado())
   - Cuando se presiona algún botón de operación, muestre un teclado numérico con dos campos para ingresar los números.

5. Crear una función JavaScript para procesar las operaciones matemáticas (calcular())
   - Recibirá los números y el operador del teclado numérico y realizará la operación correspondiente, mostrando el resultado en pantalla.

**BackendTasks:**

1. Crear API REST para recibir y procesar las operaciones matemáticas (server.js)
   - Recibirá los números y el operador del frontend y devolverá el resultado de la operación realizada en un formato json
   - Asegúrese de implementar medidas de seguridad y protección para que el servidor sea seguro y no se pierda la privacidad del usuario

2. Integración entre frontend y backend (index.html, app.js, server.js)
   - Implemente un evento click a "=" o "=" en el teclado numérico que envíe los números y operador al servidor, reciba el resultado y lo muestre en pantalla.

3. Crear base de datos (MongoDB) para guardar las últimas operaciones matemáticas realizadas por el usuario (database.js)
   - Implemente un formato JSON con los campos: timestamp, operador y resultado para guardar las últimas operaciones.