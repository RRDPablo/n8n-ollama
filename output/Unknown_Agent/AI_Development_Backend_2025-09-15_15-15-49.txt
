 Como desarrollador backend, mi tarea es implementar el servicio de operaciones matemáticas para la aplicación móvil de calculadora. La solución se basa en una API RESTful con las siguientes rutas:

1. GET /operacion/{operacion}/{numero1}/{numero2}
   - Operación es el símbolo matemático que representa la operación a realizar (sum, subtract, multiply o divide).
   - Número1 y número2 son los valores numéricos que se van a utilizar para realizar la operación.
   - Respuesta JSON:
     ```json
     {
       "resultado": 5 // ejemplo, resultado de la operación matemática
     }
    ```

2. GET /validar/{numero}
   - Número es el valor numérico que se va a validar.
   - Respuesta JSON:
     ```json
     {
       "error": null,
       "valido": true // devuelve verdadero si el número es válido, falso en caso contrario
     }
    ```

La implementación se realizará utilizando JavaScript y Node.js con Express.

Este es el código:

```javascript
const express = require('express');
const app = express();

app.get('/operacion/:operacion/:numero1/:numero2', function (req, res) {
    const operacion = req.params.operacion;
    const numero1 = parseFloat(req.params.numero1);
    const numero2 = parseFloat(req.params.numero2);

    let resultado;

    switch (operacion) {
        case 'sum':
            resultado = numero1 + numero2;
            break;
        case 'subtract':
            resultado = numero1 - numero2;
            break;
        case 'multiply':
            resultado = numero1 * numero2;
            break;
        case 'divide':
            if (numero2 == 0) {
                res.json({ error: "No se puede dividir entre cero" });
                return;
            }
            resultado = numero1 / numero2;
            break;
    }

    res.json({ resultado: resultado });
});

app.get('/validar/:numero', function (req, res) {
    const numero = req.params.numero;
    let valido = true;

    if (Number.isNaN(parseFloat(numero))) {
        valido = false;
    }

    res.json({ error: null, valido: valido });
});

app.listen(3000);
```